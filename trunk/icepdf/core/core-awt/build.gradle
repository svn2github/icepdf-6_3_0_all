description 'ICEpdf core library jar project'

def sectionName = 'org/icepdf/core/'
def baseJarName = 'icepdf'
def baseAppendixName = 'core'
def bouncyVersion = '1.57'

// generatePomFileForCoreJarPublication
publishing {
    publications {
        coreJar(MavenPublication) {
            groupId 'org.icepdf.os'
            artifactId 'icepdf-core'
            version "${VERSION + '-' + RELEASE_TYPE}"
            pom.withXml {
                asNode().appendNode('description', 'ICEpdf core rendering library.')
                asNode().appendNode('url', 'http://www.icepdf.org')
                asNode().appendNode('scm')
                        .appendNode('connection', 'scm:svn:http://anonsvn.icesoft.org/repo/icepdf/').parent()
                        .appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt').parent()
                        .appendNode('tag', 'icepdf-' + version + '-maven')
                asNode().appendNode('licenses').appendNode('license').with {
                    appendNode('name', 'Apache License, Version 2.0')
                    appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.html')
                    appendNode('distribution', 'repo')
                }
                asNode().appendNode('developers').appendNode('developer').with {
                    appendNode('name', 'ICEsoft Technologies Canada Corp.')
                    appendNode('email', 'product.sales@icesoft.com')
                }
                asNode().appendNode('issueManagement').with {
                    appendNode('url', 'http://jira.icesoft.org/browse/PDF/')
                    appendNode('system', 'JIRA')
                }
            }
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

//publishing {
//    repositories {
//        maven {
//            // change to point to your repo, e.g. http://my.org/repo
//            url "$buildDir/repo"
//        }
//    }
//}

jar() {
    baseName "${baseJarName}"
    appendix "${baseAppendixName}"
    version "${VERSION}"
    classifier "${RELEASE_TYPE}"
    manifest {
        attributes("Implementation-Title": "${baseName + '-' + appendix}", "${sectionName}")
        attributes("Implementation-Version": "${version + '-' + classifier}", "${sectionName}")
        attributes("Implementation-Vendor": "${COMPANY}", "${sectionName}")
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    description = 'Assembles a jar archive containing the main classes source code.'
    group = 'Documentation'

    baseName "${baseJarName}"
    appendix "${baseAppendixName}"
    version "${VERSION}"
    classifier = 'sources'
    manifest {
        attributes("Implementation-Title": "${baseName + '-' + appendix}", "${sectionName}")
        attributes("Implementation-Version": "${version + '-' + classifier}", "${sectionName}")
        attributes("Implementation-Vendor": "${COMPANY}", "${sectionName}")
    }
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: 'javadoc') {
    from javadoc
    classifier = 'javadoc'
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

compileJava {
    doFirst{

        def jenkinsBuild = System.getenv("BUILD_NUMBER") ?: "0"
        def jenkinsRevision = System.getenv("SVN_REVISION") ?: "0"

        copy{
            from 'src/main/resources/org/icepdf/core/application/ProductInfo.java'
            into 'src/main/java/org/icepdf/core/application/'
            filter(org.apache.tools.ant.filters.ReplaceTokens,
                    tokens: [company: COMPANY, product: PRODUCT, version: VERSION, type: RELEASE_TYPE,
                             build: jenkinsBuild, revision: jenkinsRevision])
        }
    }
}

clean {
    doLast{
        file("src/main/java/org/icepdf/core/application/ProductInfo.java").delete()
    }
}

dependencies {
    // signature validation.
    compile 'org.bouncycastle:bcprov-jdk15on:' + "${bouncyVersion}"
    compile 'org.bouncycastle:bcprov-ext-jdk15on:' + "${bouncyVersion}"
    compile 'org.bouncycastle:bcpkix-jdk15on:' + "${bouncyVersion}"
    // tiff, jpeg2000 and jbig decoding
    compile 'com.twelvemonkeys.imageio:imageio-tiff:3.4-SNAPSHOT'
    compile 'com.github.jai-imageio:jai-imageio-jpeg2000:1.3.0'
    compile 'org.apache.pdfbox:jbig2-imageio:3.0.0-SNAPSHOT'

}
